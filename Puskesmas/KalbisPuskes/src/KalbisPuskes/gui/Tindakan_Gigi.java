/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package KalbisPuskes.gui;

import static java.awt.Color.white;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author DIOR
 */
public class Tindakan_Gigi extends javax.swing.JFrame {
Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    String no_rkm = RekamMedis_Gigi.getNoRekam();
    String ID = Login.getUserLogin();
    public int total_tindakan;

    /**
     * Creates new form Tindakan_Umum
     */
    public Tindakan_Gigi() {
        initComponents();
        con = Connect.ConnectDb();
        no_rekam_medis.setText(no_rkm);
        //no_rekam_medis.setText("1");
        total_harga_tindakan.setVisible(false);
        total_harga_tindakan1.setVisible(false);
        total_harga_acrilic.setVisible(false);
        total_harga_flexi.setVisible(false);
        jml_acrilic.setVisible(false);
        jml_flexi.setVisible(false);
        satuan_acrilic.setVisible(false);
        satuan_flexi.setVisible(false);
        total_harga_tindakan1.setVisible(false);
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(white);
        jButton2.setVisible(false);
        jButton3.setVisible(false);
        kode_acrilic.setVisible(false);
        kode_flexi.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        no_rekam_medis = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tab1 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jCheckBox21 = new javax.swing.JCheckBox();
        jml_acrilic = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jml_flexi = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jCheckBox22 = new javax.swing.JCheckBox();
        jCheckBox23 = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jCheckBox24 = new javax.swing.JCheckBox();
        jCheckBox25 = new javax.swing.JCheckBox();
        jCheckBox26 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        total_harga_tindakan = new javax.swing.JTextField();
        total_harga_tindakan1 = new javax.swing.JTextField();
        total_harga_acrilic = new javax.swing.JTextField();
        total_harga_flexi = new javax.swing.JTextField();
        satuan_acrilic = new javax.swing.JTextField();
        satuan_flexi = new javax.swing.JTextField();
        kode_acrilic = new javax.swing.JTextField();
        kode_flexi = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tindakan");

        jLabel1.setText("No Rekam Medis:");

        no_rekam_medis.setText("value......");

        jCheckBox1.setText("Konsultasi Dokter Gigi");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Konsultasi");

        jLabel3.setText("Pencabutan Gigi (Anak)");

        jCheckBox2.setText("Topical Anastesi Gel / Chlor Etyl");
        jCheckBox2.setToolTipText("");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Kecil");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("Besar");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jCheckBox5.setText("Operculectomy");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jCheckBox6.setText("Kecil");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jCheckBox7.setText("Sedang");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jCheckBox8.setText("Besar");
        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });

        jCheckBox9.setText("Odentectomy (Impected)");
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });

        jCheckBox10.setText("Per 1 (Satu) Rahang");
        jCheckBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox10ActionPerformed(evt);
            }
        });

        jCheckBox11.setText("Rahang Atas Dan Bawah");
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });

        jCheckBox12.setText("1 Gigi Pertama Rahang");
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });

        jCheckBox13.setText("Gigi Pertama Rahang");
        jCheckBox13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox13ActionPerformed(evt);
            }
        });

        jCheckBox14.setText("Gigi Berikutnya Per");
        jCheckBox14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox14ActionPerformed(evt);
            }
        });

        jCheckBox15.setText("Full Denture Acrilic Rahang Atas dan Bawah");
        jCheckBox15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox15ActionPerformed(evt);
            }
        });

        jCheckBox16.setText("Reparasi GTS Basis");
        jCheckBox16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox16ActionPerformed(evt);
            }
        });

        jCheckBox17.setText("Rebasing Full Denture Per Rahang");
        jCheckBox17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox17ActionPerformed(evt);
            }
        });

        jCheckBox18.setText("Suntikan");
        jCheckBox18.setToolTipText("");
        jCheckBox18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox18ActionPerformed(evt);
            }
        });

        jLabel4.setText("Pencabutan Gigi (Dewasa)");

        jCheckBox19.setText("Biasa");
        jCheckBox19.setToolTipText("");
        jCheckBox19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox19ActionPerformed(evt);
            }
        });

        jCheckBox20.setText("Dengan Komplikasi");
        jCheckBox20.setToolTipText("");
        jCheckBox20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox20ActionPerformed(evt);
            }
        });

        jLabel5.setText("Tambal GIC");

        jLabel6.setText("Tambal Sementara");

        jLabel7.setText("Tambal Resin Komplit / LC");

        jLabel8.setText("Pembersihan Karang Gigi (Scalling)");

        jLabel9.setText("Pemasangan Gigi Palsu Acrilic");

        jCheckBox21.setText("Gigi Berikutnya Per");
        jCheckBox21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox21ActionPerformed(evt);
            }
        });

        jml_acrilic.setText("00");
        jml_acrilic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jml_acrilicActionPerformed(evt);
            }
        });
        jml_acrilic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jml_acrilicKeyReleased(evt);
            }
        });

        jLabel10.setText("Pemasangan Gigi Palsu Flexi Denture");

        jml_flexi.setText("00");
        jml_flexi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jml_flexiKeyReleased(evt);
            }
        });

        jLabel11.setText("Pemasangan Gigi Palsu");

        jCheckBox22.setText("Pin Core");
        jCheckBox22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox22ActionPerformed(evt);
            }
        });

        jCheckBox23.setText("Incisi Abses, Kuretase");
        jCheckBox23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox23ActionPerformed(evt);
            }
        });

        jLabel12.setText("Orthodontic");

        jCheckBox24.setText("Fixed Orthodontic Rahang Atas dan Bawah");
        jCheckBox24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox24ActionPerformed(evt);
            }
        });

        jCheckBox25.setText("Aktifer Fixed Orthodontic Ganti Karet");
        jCheckBox25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox25ActionPerformed(evt);
            }
        });

        jCheckBox26.setText("Aktifer Fixed Orthodontic Ganti Karet dan Kawat");
        jCheckBox26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox26ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton2.setText("+");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton3.setText("+");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tab1Layout = new javax.swing.GroupLayout(tab1);
        tab1.setLayout(tab1Layout);
        tab1Layout.setHorizontalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jLabel3)
                    .addComponent(jCheckBox18)
                    .addComponent(jLabel4)
                    .addComponent(jCheckBox19)
                    .addComponent(jCheckBox20)
                    .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox3)
                            .addComponent(jCheckBox4))
                        .addComponent(jLabel5)))
                .addGap(32, 32, 32)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox6)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox8)
                    .addComponent(jCheckBox9)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jCheckBox10)
                    .addComponent(jCheckBox11))
                .addGap(18, 18, 18)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab1Layout.createSequentialGroup()
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox14)
                            .addComponent(jCheckBox13)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jCheckBox15)
                            .addComponent(jCheckBox16)
                            .addComponent(jCheckBox17)
                            .addComponent(jCheckBox12)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox23)
                            .addComponent(jCheckBox22)
                            .addComponent(jLabel12)
                            .addComponent(jCheckBox24)
                            .addComponent(jCheckBox25)
                            .addComponent(jCheckBox26))
                        .addGap(15, 15, 15))
                    .addGroup(tab1Layout.createSequentialGroup()
                        .addComponent(jCheckBox21)
                        .addGap(18, 18, 18)
                        .addComponent(jml_acrilic, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab1Layout.createSequentialGroup()
                        .addComponent(jml_flexi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(333, 333, 333))))
        );
        tab1Layout.setVerticalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9)
                    .addComponent(jCheckBox22))
                .addGap(1, 1, 1)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox12)
                    .addComponent(jCheckBox23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jCheckBox21)
                    .addComponent(jml_acrilic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox6)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tab1Layout.createSequentialGroup()
                                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCheckBox18)
                                    .addComponent(jCheckBox7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jCheckBox8)))
                            .addGroup(tab1Layout.createSequentialGroup()
                                .addComponent(jCheckBox24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox25)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tab1Layout.createSequentialGroup()
                                .addComponent(jCheckBox19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox4))
                            .addComponent(jCheckBox26)))
                    .addGroup(tab1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox14)
                            .addComponent(jml_flexi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox9)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jCheckBox15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox10)
                            .addComponent(jCheckBox16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox11)
                            .addComponent(jCheckBox17))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tindakan", tab1);

        jButton1.setText("SIMPAN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Koneksi");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Navigasi");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(no_rekam_medis, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(satuan_acrilic, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(total_harga_tindakan1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(satuan_flexi, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(total_harga_tindakan, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(total_harga_acrilic, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(total_harga_flexi, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(kode_acrilic, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(kode_flexi, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(no_rekam_medis)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(total_harga_tindakan1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(satuan_acrilic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(satuan_flexi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(total_harga_tindakan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(total_harga_acrilic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(total_harga_flexi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(kode_acrilic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(kode_flexi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            String rekam= no_rkm;
            con.createStatement().execute("update rekam_medis set total_harga_tindakan = '"+total_harga_tindakan.getText()+"' where nomor_rekam_medis = '"+rekam+"' ");
            JOptionPane.showMessageDialog(rootPane,"Data Terupdate!");
        } catch(SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null,"Data yang diinput belum lengkap! / Data sudah pernah diinput! / tidak boleh input data yang sama!");
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox17ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox17.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG021'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'INJ007' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox17ActionPerformed

    private void jCheckBox16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox16ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox16.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG020'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG020' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox16ActionPerformed

    private void jCheckBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox15ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox15.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG019'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG019' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox15ActionPerformed

    private void jCheckBox14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox14ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox14.isSelected()){
            jml_flexi.setVisible(true);
            jButton3.setVisible(true);
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG018'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    satuan_flexi.setText(harga);
                    String kode_tindakan = rs.getString("kode_tindakan");
                    kode_flexi.setText(kode_tindakan);
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            jml_flexi.setVisible(false);
            jButton3.setVisible(false);
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG018' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox14ActionPerformed

    private void jCheckBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox13ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox13.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG017'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG017' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox13ActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox12.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG015'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG015' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox11.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG014'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG014' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox11ActionPerformed

    private void jCheckBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox10ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox10.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG013'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG013' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox10ActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox9.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG012'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG012' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox8.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG011'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG011' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox8ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox7.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG010'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG010' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox6.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG009'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG009' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox5.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG008'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG008' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox4.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG007'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG007' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox3.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG006'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG006' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox2.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG002'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG002' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox1.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG001'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG001' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox18ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox18.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG003'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG003' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox18ActionPerformed

    private void jCheckBox19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox19ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox19.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG004'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG004' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox19ActionPerformed

    private void jCheckBox20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox20ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox20.isSelected()){
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG005'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,?,?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, rs.getString("nama_tindakan"));
                    pst.setString(4, harga);
                    pst.setString(5, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG005' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox20ActionPerformed

    private void jCheckBox21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox21ActionPerformed
        // TODO add your handling code here:
        
        if(jCheckBox21.isSelected()){
            jml_acrilic.setVisible(true);
            jButton2.setVisible(true);
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG016'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    satuan_acrilic.setText(harga);
                    String kode_tindakan = rs.getString("kode_tindakan");
                    kode_acrilic.setText(kode_tindakan);
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            jml_acrilic.setVisible(false);
            jButton2.setVisible(false);
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG016' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox21ActionPerformed

    private void jCheckBox22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox22ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox22.isSelected()){
            jml_acrilic.setVisible(true);
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG022'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    satuan_acrilic.setText(harga);
                    Integer harga_int = Integer.parseInt(total_harga_acrilic.getText());
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,'Pemasangan Gigi Palsu Acrilic Gigi Berikutnya Per "+jml_acrilic.getText()+" ',?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, harga);
                    pst.setString(4, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            jml_acrilic.setVisible(false);
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG022' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox22ActionPerformed

    private void jCheckBox23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox23ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox23.isSelected()){
            jml_acrilic.setVisible(true);
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG023'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    satuan_acrilic.setText(harga);
                    Integer harga_int = Integer.parseInt(total_harga_acrilic.getText());
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,'Pemasangan Gigi Palsu Acrilic Gigi Berikutnya Per "+jml_acrilic.getText()+" ',?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, harga);
                    pst.setString(4, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            jml_acrilic.setVisible(false);
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG023' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox23ActionPerformed

    private void jCheckBox24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox24ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox24.isSelected()){
            jml_acrilic.setVisible(true);
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG024'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    satuan_acrilic.setText(harga);
                    Integer harga_int = Integer.parseInt(total_harga_acrilic.getText());
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,'Pemasangan Gigi Palsu Acrilic Gigi Berikutnya Per "+jml_acrilic.getText()+" ',?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, harga);
                    pst.setString(4, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            jml_acrilic.setVisible(false);
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG024' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox24ActionPerformed

    private void jCheckBox25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox25ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox25.isSelected()){
            jml_acrilic.setVisible(true);
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG025'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    satuan_acrilic.setText(harga);
                    Integer harga_int = Integer.parseInt(total_harga_acrilic.getText());
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,'Pemasangan Gigi Palsu Acrilic Gigi Berikutnya Per "+jml_acrilic.getText()+" ',?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, harga);
                    pst.setString(4, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            jml_acrilic.setVisible(false);
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG025' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox25ActionPerformed

    private void jCheckBox26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox26ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox26.isSelected()){
            jml_acrilic.setVisible(true);
            try{
                String sql = "select * from tindakan_gigi where kode_tindakan = 'GIG026'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String harga = rs.getString("harga");
                    satuan_acrilic.setText(harga);
                    Integer harga_int = Integer.parseInt(total_harga_acrilic.getText());
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,'Pemasangan Gigi Palsu Acrilic Gigi Berikutnya Per "+jml_acrilic.getText()+" ',?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
                    pst=con.prepareStatement(insert);
                    pst.setString(1, no_rekam_medis.getText());
                    pst.setString(2, rs.getString("kode_tindakan"));
                    pst.setString(3, harga);
                    pst.setString(4, ID);
                    pst.execute();
                }
            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else{
            jml_acrilic.setVisible(false);
            try{
                String sql = "select * FROM detail_tindakan where nomor_rekam_medis = '"+no_rkm+"' and kode_tindakan = 'GIG026' ORDER by kode_detail DESC limit 1";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    String kode = rs.getString("kode_detail");
                    String harga = rs.getString("harga");
                    Integer harga_int = Integer.parseInt(harga);
                    total_tindakan = total_tindakan-harga_int;
                    con.createStatement().execute("delete from detail_tindakan where kode_detail='"+kode+"' ");
                }

            }catch (SQLException | HeadlessException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jCheckBox26ActionPerformed

    private void jml_acrilicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jml_acrilicKeyReleased
        // TODO add your handling code here:
        int qty_acrilic = Integer.parseInt(jml_acrilic.getText());
        int harga_satuan = Integer.parseInt(satuan_acrilic.getText());
        int totalnya = harga_satuan*qty_acrilic;
        total_harga_acrilic.setText(String.valueOf(totalnya));
        total_tindakan = total_tindakan+totalnya;
        total_harga_tindakan.setText(String.valueOf(total_tindakan));
    }//GEN-LAST:event_jml_acrilicKeyReleased

    private void jml_acrilicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jml_acrilicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jml_acrilicActionPerformed

    private void jml_flexiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jml_flexiKeyReleased
        // TODO add your handling code here:
        int qty_flexi = Integer.parseInt(jml_flexi.getText());
        int harga_satuan1 = Integer.parseInt(satuan_flexi.getText());
        int totalnya1 = harga_satuan1*qty_flexi;
        total_tindakan = total_tindakan+totalnya1;
        total_harga_flexi.setText(String.valueOf(totalnya1));
        total_harga_tindakan.setText(String.valueOf(total_tindakan));        
    }//GEN-LAST:event_jml_flexiKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jml_acrilic.setEditable(false);
        jButton2.setVisible(false);
        try{
            //int harga_int = Integer.parseInt(total_harga_acrilic.getText());

            String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,'Pemasangan Gigi Palsu Acrilic Gigi Berikutnya Per "+jml_acrilic.getText()+" Gigi',?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
            pst=con.prepareStatement(insert);
            pst.setString(1, no_rekam_medis.getText());
            pst.setString(2, kode_acrilic.getText());
            pst.setString(3, total_harga_acrilic.getText());
            pst.setString(4, ID);
            pst.execute();
        }catch (SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jml_flexi.setEditable(false);
        jButton3.setVisible(false);
        try{
            //int harga_int = Integer.parseInt(total_harga_acrilic.getText());
            Integer harga_int = Integer.parseInt(total_harga_flexi.getText());
                    total_tindakan = total_tindakan+harga_int;
                    String insert ="insert into detail_tindakan (nomor_rekam_medis,kode_tindakan,nama_tindakan,harga,tanggal_entri,nama_pengentri)values (?,?,'Pemasangan Gigi Palsu Flexi Denture Gigi Berikutnya per "+jml_flexi.getText()+" Gigi',?,DATE_FORMAT(NOW(),'%Y-%m-%d %T'),?)";
            pst=con.prepareStatement(insert);
            pst.setString(1, no_rekam_medis.getText());
            pst.setString(2, kode_flexi.getText());
            pst.setString(3, total_harga_flexi.getText());
            pst.setString(4, ID);
            pst.execute();
        }catch (SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tindakan_Gigi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tindakan_Gigi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tindakan_Gigi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tindakan_Gigi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tindakan_Gigi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox23;
    private javax.swing.JCheckBox jCheckBox24;
    private javax.swing.JCheckBox jCheckBox25;
    private javax.swing.JCheckBox jCheckBox26;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jml_acrilic;
    private javax.swing.JTextField jml_flexi;
    private javax.swing.JTextField kode_acrilic;
    private javax.swing.JTextField kode_flexi;
    private javax.swing.JLabel no_rekam_medis;
    private javax.swing.JTextField satuan_acrilic;
    private javax.swing.JTextField satuan_flexi;
    private javax.swing.JPanel tab1;
    private javax.swing.JTextField total_harga_acrilic;
    private javax.swing.JTextField total_harga_flexi;
    private javax.swing.JTextField total_harga_tindakan;
    private javax.swing.JTextField total_harga_tindakan1;
    // End of variables declaration//GEN-END:variables
}
