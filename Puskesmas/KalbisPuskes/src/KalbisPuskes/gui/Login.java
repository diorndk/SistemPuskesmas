/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package KalbisPuskes.gui;

import static java.awt.Color.white;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author AiVarelEzel
 */
public class Login extends javax.swing.JFrame {
    public Karyawan tl;
    public RekamMedis rm;
    public RekamMedis_Bidan rb;
    public RekamMedis_Gigi rg;
    public Resep re;
    public Obat ob;
    public Pasien pasien;
    public Kepala_Klinik kk;
    public Connection con;
    public Statement st;
    
    private static String Uname;
    public static void setUserLogin(String Uname) {
    Login.Uname = Uname;
    }
    
    public static String getUserLogin() {
    return Uname;
    }
    
    public void UpperCasedTextFieldTester(){
        
        DocumentFilter filter = new UppercaseDocumentFilter();

        kode_karyawan.setPreferredSize(new Dimension(100, 20));
        ((AbstractDocument) kode_karyawan.getDocument()).setDocumentFilter(filter);

       add(kode_karyawan);
    }
     
    class UppercaseDocumentFilter extends DocumentFilter {
        public void insertString(DocumentFilter.FilterBypass fb, int offset,
                String text, AttributeSet attr) throws BadLocationException {

            fb.insertString(offset, text.toUpperCase(), attr);
        }

        public void replace(DocumentFilter.FilterBypass fb, int offset, int length,
                String text, AttributeSet attrs) throws BadLocationException {

            fb.replace(offset, length, text.toUpperCase(), attrs);
        }
    } 

    /**
     * Creates new form Login
     */
    public Login(){
        initComponents();
        this.setLocationRelativeTo(null);
        con = Connect.ConnectDb();
        UpperCasedTextFieldTester();
        this.getContentPane().setBackground(white);
        ImageIcon ico = new ImageIcon("src/KalbisPuskes/gui/logo.png");
        this.setIconImage(ico.getImage());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        kode_karyawan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setIconImage(getIconImage());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Kode Karyawan");

        kode_karyawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kode_karyawanActionPerformed(evt);
            }
        });
        kode_karyawan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                kode_karyawanKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Password");

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kode_karyawan, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 56, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kode_karyawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    private void kode_karyawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kode_karyawanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kode_karyawanActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            try{
                st = con.createStatement();
            }catch (SQLException ex){
                JOptionPane.showMessageDialog(null,"Koneksi error");
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,ex);
            }
            String sql="select * from karyawan where kode_karyawan ='"+kode_karyawan.getText()+"'and password='"+String.valueOf(password.getPassword())+"'";
            ResultSet res=st.executeQuery(sql);
            if(res.next()){
                Uname = res.getString("nama_karyawan");
                String kode = kode_karyawan.getText().substring(0,2);
                switch(kode){
                    case"DU":
                        rm=new RekamMedis();
                        rm.setVisible(true);
                        this.dispose();   
                        break;
                    case"du":
                        rm=new RekamMedis();
                        rm.setVisible(true);
                        this.dispose();   
                        break;
                    case"KK":
                        kk=new Kepala_Klinik();
                        kk.setVisible(true);
                        this.dispose();   
                        break;
                    case"kk":
                        kk=new Kepala_Klinik();
                        kk.setVisible(true);
                        this.dispose();   
                        break;
                    case"DG":
                        rg=new RekamMedis_Gigi();
                        rg.setVisible(true);
                        this.dispose();
                        break;
                    case"dg":
                        rg=new RekamMedis_Gigi();
                        rg.setVisible(true);
                        this.dispose();
                        break;
                    case"AD":
                        pasien=new Pasien();
                        pasien.setVisible(true);
                        this.dispose();
                        break;
                    case"ad":
                        pasien=new Pasien();
                        pasien.setVisible(true);
                        this.dispose();
                        break;
                    case"KI":
                        rb=new RekamMedis_Bidan();
                        rb.setVisible(true);
                        this.dispose();
                        break;
                    case"ki":
                        rb=new RekamMedis_Bidan();
                        rb.setVisible(true);
                        this.dispose();
                        break;
                    /*case"AN":
                        home=new Home();
                        home.setVisible(true);
                        this.dispose();
                        break;
                    case"an":
                        home=new Home();
                        home.setVisible(true);
                        this.dispose();
                        break;*/
                    case"AP":
                        ob=new Obat();
                        ob.setVisible(true);
                        this.dispose();
                        break;
                    case"ap":
                        ob=new Obat();
                        ob.setVisible(true);
                        this.dispose();
                        break;
                    default:
                        tl=new Karyawan();
                        tl.setVisible(true);
                        this.dispose();
                        break;
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Username atau Password salah");
            }
        }
        catch (SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null,"login rusak"+e.toString());
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_passwordKeyPressed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
        try{
            try{
                st = con.createStatement();
            }catch (SQLException ex){
                JOptionPane.showMessageDialog(null,"Koneksi error");
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,ex);
            }
            String sql="select * from karyawan where kode_karyawan ='"+kode_karyawan.getText()+"'and password='"+String.valueOf
                    (password.getPassword())+"'";
            ResultSet res=st.executeQuery(sql);
            if(res.next()){
                Uname = res.getString("nama_karyawan");
                String kode = kode_karyawan.getText().substring(0,2);
                switch(kode){
                    case"KK":
                        kk=new Kepala_Klinik();
                        kk.setVisible(true);
                        this.dispose();   
                        break;
                    case"kk":
                        kk=new Kepala_Klinik();
                        kk.setVisible(true);
                        this.dispose();   
                        break;
                    case"DU":
                        rm=new RekamMedis();
                        rm.setVisible(true);
                        this.dispose();   
                        break;
                    case"du":
                        rm=new RekamMedis();
                        rm.setVisible(true);
                        this.dispose();   
                        break;
                    case"DG":
                        rg=new RekamMedis_Gigi();
                        rg.setVisible(true);
                        this.dispose();
                        break;
                    case"dg":
                        rg=new RekamMedis_Gigi();
                        rg.setVisible(true);
                        this.dispose();
                        break;
                    case"AD":
                        pasien=new Pasien();
                        pasien.setVisible(true);
                        this.dispose();
                        break;
                    case"ad":
                        pasien=new Pasien();
                        pasien.setVisible(true);
                        this.dispose();
                        break;
                    case"KI":
                        rb=new RekamMedis_Bidan();
                        rb.setVisible(true);
                        this.dispose();
                        break;
                    case"ki":
                        rb=new RekamMedis_Bidan();
                        rb.setVisible(true);
                        this.dispose();
                        break;
                    /*case"AN":
                        home=new Home();
                        home.setVisible(true);
                        this.dispose();
                        break;
                    case"an":
                        home=new Home();
                        home.setVisible(true);
                        this.dispose();
                        break;*/
                    case"AP":
                        ob=new Obat();
                        ob.setVisible(true);
                        this.dispose();
                        break;
                    case"ap":
                        ob=new Obat();
                        ob.setVisible(true);
                        this.dispose();
                        break;
                    default:
                        tl=new Karyawan();
                        tl.setVisible(true);
                        this.dispose();
                        break;
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Username atau Password salah");
            }
        }
        catch (SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null,"enter rusak "+e.toString());
        }
    }//GEN-LAST:event_passwordActionPerformed

    private void kode_karyawanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kode_karyawanKeyTyped
        // TODO add your handling code here:
        if(kode_karyawan.getText().length()>=6){  
           evt.consume();
        }
    }//GEN-LAST:event_kode_karyawanKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField kode_karyawan;
    private javax.swing.JPasswordField password;
    // End of variables declaration//GEN-END:variables
}
